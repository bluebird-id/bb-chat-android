apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.protobuf'

def keyPropertiesFile = rootProject.file("local.properties")
def keyProperties = new Properties()
keyProperties.load(new FileInputStream(keyPropertiesFile))

android {
    compileSdkVersion 33
    namespace 'id.bluebird.chat'

    signingConfigs {
        release {
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
        }
    }

    defaultConfig {
        applicationId "id.bluebird.chat"
        minSdkVersion 24
        targetSdkVersion 33
        vectorDrawables.useSupportLibrary = true

        // If you are getting errors due to git not being setup comment out lines gitVersion*()
        // and uncomment lines with static assignments.

        buildConfigField 'int', 'VERSION_CODE', "${rootProject.ext.version_code}"
        buildConfigField 'String', 'VERSION_NAME', "\"${rootProject.ext.version_name}\""

        versionCode rootProject.ext.version_code
        versionName rootProject.ext.version_name
    }

    buildTypes {
        debug {
            resValue "string", "default_host_name", '"dev-tinode.bluebird.id"'
        }
        release {
            resValue "string", "default_host_name", '"api.tinode.co"'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        // Flag to enable support for the new language APIs.
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/NOTICE', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE.txt']
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':tinodesdk')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha04'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'

    // Camera libraries must use the the same version.
    def camerax_version = '1.2.1'
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"

    implementation 'androidx.activity:activity:1.6.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.emoji2:emoji2:1.2.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.fragment:fragment:1.5.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.work:work-runtime:2.8.0'

    implementation 'com.android.installreferrer:installreferrer:2.2'

    implementation 'com.google.android.exoplayer:exoplayer-core:2.18.4'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.18.4'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.5'
    implementation 'com.google.firebase:firebase-messaging:23.1.2'
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'

    implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.8'

    // Don't change to 2.7182... The 2.8 is the latest.
    // noinspection GradleDependency
    implementation 'com.squareup.picasso:picasso:2.8'
    // WebRTC.
    implementation 'com.dafruits:webrtc:109.0.0'
    // QR Code generator.
    implementation 'io.nayuki:qrcodegen:1.8.0'

    annotationProcessor 'androidx.lifecycle:lifecycle-common-java8:2.6.0'

    // noinspection GradleDependency: does not compile with 2.x (even for API 33).
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // You need to build grpc-java to obtain these libraries below.
    implementation "io.grpc:grpc-okhttp:1.43.1"
    implementation "io.grpc:grpc-protobuf-lite:1.43.1"
    implementation "io.grpc:grpc-stub:1.43.1"
    implementation "io.grpc:grpc-android:1.43.1"
}

configurations {
    all {
        exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
    }
}

protobuf {
    def protobuf_platform = { ->
        return keyProperties.getProperty("protobuf_platform", "") // for support apple silicon
    }
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.0${protobuf_platform}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.37.0${protobuf_platform}"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { option 'lite' }
            }
        }
    }
}